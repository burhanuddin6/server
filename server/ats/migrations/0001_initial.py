# Generated by Django 5.0.3 on 2024-04-08 10:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('account_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_type', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=64)),
                ('overview', models.CharField(max_length=1024)),
                ('responsibilities', models.CharField(max_length=1024)),
                ('qualifications', models.CharField(max_length=1024)),
                ('work_site', models.CharField(max_length=64)),
                ('work_type', models.CharField(max_length=64)),
                ('is_open', models.BooleanField()),
                ('posted_on', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('notif_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('template', models.TextField()),
                ('is_email_notif', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('org_name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileScore',
            fields=[
                ('profile_score_id', models.AutoField(primary_key=True, serialize=False)),
                ('resume_score', models.IntegerField()),
                ('relevance_score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('salary_id', models.AutoField(primary_key=True, serialize=False)),
                ('min_salary', models.IntegerField()),
                ('max_salary', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has completed the email verification process to allow login.', verbose_name='verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('candidate_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=64)),
                ('phone', models.CharField(max_length=64)),
                ('country', models.CharField(max_length=64)),
                ('linkedin_url', models.CharField(max_length=256)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateApplication',
            fields=[
                ('application_id', models.AutoField(primary_key=True, serialize=False)),
                ('resume_file', models.CharField(max_length=256)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.candidate')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.job')),
                ('profile_score_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.profilescore')),
            ],
        ),
        migrations.CreateModel(
            name='JobScreen',
            fields=[
                ('job_screen_id', models.AutoField(primary_key=True, serialize=False)),
                ('screen_number', models.IntegerField()),
                ('last_screen', models.BooleanField()),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.job')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateJobScreenRelation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_screen_passed', models.BooleanField()),
                ('application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.candidateapplication')),
                ('job_screen_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.jobscreen')),
            ],
        ),
        migrations.CreateModel(
            name='JobScreenInterview',
            fields=[
                ('job_screen_interview_id', models.AutoField(primary_key=True, serialize=False)),
                ('are_candidate_notified', models.BooleanField()),
                ('are_all_interviews_done', models.BooleanField()),
                ('last_interveiw_date', models.DateTimeField()),
                ('job_screen_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.jobscreen')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateInterview',
            fields=[
                ('canditate_interview_id', models.AutoField(primary_key=True, serialize=False)),
                ('interview_date', models.DateTimeField()),
                ('interview_time', models.TimeField()),
                ('candidate_application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.candidateapplication')),
                ('job_screen_interview_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.jobscreeninterview')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notif_id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField()),
                ('creation_time', models.TimeField()),
                ('additional_info', models.TextField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('notif_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.notificationtype')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.organization'),
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('recruiter_id', models.AutoField(primary_key=True, serialize=False)),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.organization')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='admin_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.recruiter'),
        ),
        migrations.AddField(
            model_name='jobscreeninterview',
            name='creater_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.recruiter'),
        ),
        migrations.AddField(
            model_name='job',
            name='creater_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.recruiter'),
        ),
        migrations.CreateModel(
            name='Remark',
            fields=[
                ('remark_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate_job_screen_relation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.candidatejobscreenrelation')),
                ('recruiter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.recruiter')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='salary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ats.salary'),
        ),
    ]
